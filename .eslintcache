[{"C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\index.js":"1","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\services\\api.js":"2","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\services\\user.js":"3","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\components\\Asidebar.jsx":"4","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\views\\Types.jsx":"5","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\components\\ListItem.jsx":"6","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\views\\Login.jsx":"7","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\views\\Clients.jsx":"8","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\views\\Users.jsx":"9","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\components\\Upload.jsx":"10","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\components\\ListUploadImages.jsx":"11","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\components\\FileList\\styles.js":"12","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\components\\Uploadv2\\styles.js":"13","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\components\\FileList\\index.js":"14","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\components\\Uploadv2\\index.js":"15","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\Router.js":"16","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\views\\NewMachine\\styled.js":"17","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\views\\NewMachine\\index.jsx":"18","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\views\\App.jsx":"19","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\components\\CustomAlert.jsx":"20","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\views\\FindMachine.jsx":"21","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\components\\Header.jsx":"22","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\assets\\styles\\views\\userStyles.js":"23","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\assets\\styles\\views\\loginStyles.js":"24","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\assets\\styles\\views\\appStyles.js":"25","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\assets\\styles\\views\\findMachineStyles.js":"26","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\assets\\styles\\components\\customAlertStyles.js":"27","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\assets\\styles\\views\\clientsStyles.js":"28","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\assets\\styles\\components\\sidebarStyles.js":"29"},{"size":194,"mtime":1607900807407,"results":"30","hashOfConfig":"31"},{"size":119,"mtime":1608484504578,"results":"32","hashOfConfig":"31"},{"size":434,"mtime":1606692011357,"results":"33","hashOfConfig":"31"},{"size":2932,"mtime":1608406753882,"results":"34","hashOfConfig":"31"},{"size":5199,"mtime":1607900253301,"results":"35","hashOfConfig":"31"},{"size":1127,"mtime":1607269267792,"results":"36","hashOfConfig":"31"},{"size":4073,"mtime":1608406922461,"results":"37","hashOfConfig":"31"},{"size":4873,"mtime":1607900368363,"results":"38","hashOfConfig":"31"},{"size":7092,"mtime":1607899863953,"results":"39","hashOfConfig":"31"},{"size":1832,"mtime":1607285701398,"results":"40","hashOfConfig":"31"},{"size":3363,"mtime":1607288403443,"results":"41","hashOfConfig":"31"},{"size":1175,"mtime":1607469441574,"results":"42","hashOfConfig":"31"},{"size":795,"mtime":1607288644117,"results":"43","hashOfConfig":"31"},{"size":1931,"mtime":1607288490519,"results":"44","hashOfConfig":"31"},{"size":1498,"mtime":1607288644110,"results":"45","hashOfConfig":"31"},{"size":1737,"mtime":1608408497427,"results":"46","hashOfConfig":"31"},{"size":1074,"mtime":1607386961555,"results":"47","hashOfConfig":"31"},{"size":11107,"mtime":1607895562745,"results":"48","hashOfConfig":"31"},{"size":5980,"mtime":1608406295605,"results":"49","hashOfConfig":"31"},{"size":1045,"mtime":1607901037589,"results":"50","hashOfConfig":"31"},{"size":4940,"mtime":1608406613871,"results":"51","hashOfConfig":"31"},{"size":469,"mtime":1607894902728,"results":"52","hashOfConfig":"31"},{"size":523,"mtime":1607899883763,"results":"53","hashOfConfig":"31"},{"size":491,"mtime":1607900611559,"results":"54","hashOfConfig":"31"},{"size":707,"mtime":1608406252206,"results":"55","hashOfConfig":"31"},{"size":1124,"mtime":1607900467048,"results":"56","hashOfConfig":"31"},{"size":207,"mtime":1607900991220,"results":"57","hashOfConfig":"31"},{"size":470,"mtime":1607900324769,"results":"58","hashOfConfig":"31"},{"size":449,"mtime":1607901055657,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"15m20y1",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\index.js",[],["130","131"],"C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\services\\api.js",[],"C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\services\\user.js",["132"],"export function login(user){\r\n    delete user.password;\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n}\r\n\r\nexport function getUser(){\r\n    return JSON.parse(localStorage.getItem('user'));\r\n}\r\n\r\nexport function logoff(){\r\n    localStorage.setItem('user', 'null');\r\n}\r\n\r\nexport function userIsAdmin(){\r\n    return 2 == getUser().level;\r\n}\r\n\r\nexport function isValidUser() {\r\n    return getUser() && getUser().level >=1;\r\n}\r\n",["133","134"],"C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\components\\Asidebar.jsx",[],"C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\views\\Types.jsx",[],"C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\components\\ListItem.jsx",[],["135","136"],"C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\views\\Login.jsx",[],"C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\views\\Clients.jsx",["137"],"import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nimport Asidebar from '../components/Asidebar';\r\nimport ListItem from '../components/ListItem';\r\nimport CustomAlert from '../components/CustomAlert';\r\nimport Header from '../components/Header';\r\n\r\nimport api from '../services/api';\r\nimport clientStyles from '../assets/styles/views/clientsStyles';\r\nimport { getUser, userIsAdmin } from '../services/user';\r\n\r\nconst useStyles = makeStyles(clientStyles);\r\n\r\nexport default function Clients() {\r\n    const classes = useStyles();\r\n    const [_id, setId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [allClients, setAllClients] = useState([]);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const [alertType, setAlertType] = useState('');\r\n\r\n    useEffect(() => {\r\n        loadAllClients();\r\n    });\r\n\r\n    function loadAllClients() {\r\n        api.get('/clients').then(resp => {\r\n            const clients = resp.data;\r\n            setAllClients(clients);\r\n        })\r\n    }\r\n\r\n    function handleDelete({ _id }) {\r\n        api.delete('/clients', { data: { _id } }).then(resp => {\r\n            if (resp.data.success) {\r\n                loadAllClients();\r\n                setAlert('Cliente excluído com sucesso');\r\n            }\r\n        })\r\n    }\r\n\r\n    function handleSetUpdate({ _id, name }) {\r\n        setId(_id);\r\n        setName(name);\r\n    }\r\n\r\n    function setAlert(message, type = \"success\") {\r\n        setAlertMessage(message);\r\n        setAlertType(type);\r\n        if (type === 'success') setTimeout(() => { setAlertMessage('') }, 3000);\r\n    }\r\n\r\n    function updateOrCreate() {\r\n        if (_id !== '') {\r\n            api.put('/clients', { _id, name }).then(resp => {\r\n                loadAllClients();\r\n                setName('');\r\n                setId('');\r\n                setAlert('Cliente atualizado com sucesso!');\r\n            });\r\n        } else {\r\n            if (!name) return setAlert('Nome não definido', 'error');\r\n            api.post('/clients', { name, createdBy: getUser() }).then(resp => {\r\n                if (resp.data._id) {\r\n                    setAlert('Cliente criado com sucesso!');\r\n                    loadAllClients();\r\n                } else {\r\n                    setAlert('ocorreu um erro');\r\n                }\r\n            }).catch(err => { setAlert('erro no server') })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.typesContainer}>\r\n            <CustomAlert close onButtonClick={() => setAlertMessage('')} alertType={alertType} alertMessage={alertMessage} />\r\n            <Asidebar />\r\n            <div className={classes.typesContent}>\r\n                <Card className={classes.cardContainer}>\r\n                    <Header title=\"Clientes\" />\r\n                    {allClients.map(props => <ListItem\r\n                        key={props._id}\r\n                        _id={props._id}\r\n                        name={props.name}\r\n                        hideDelete={!userIsAdmin()}\r\n                        edit={handleSetUpdate}\r\n                        delete={handleDelete}\r\n                    />)}\r\n                </Card>\r\n\r\n                <Card className={classes.cardContainer}>\r\n                    <Header title={_id !== '' ? 'Editar Cliente' : 'Criar Novo Cliente'}/>                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                required\r\n                                id=\"typeName\"\r\n                                name=\"typeName\"\r\n                                label={_id !== '' ? \"Alterar Nome\" : \"Nome\"}\r\n                                fullWidth\r\n                                autoComplete=\"typeName\"\r\n                                value={name}\r\n                                onChange={event => setName(event.target.value)}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <ButtonGroup className={classes.buttonGroup} disableElevation variant=\"contained\" color=\"primary\">\r\n                        <Button onClick={updateOrCreate}>{_id !== '' ? 'Salvar Alterações' : 'Criar Novo'}</Button>\r\n                        {_id !== '' && <Button onClick={() => {\r\n                            setId('');\r\n                            setName('');\r\n                        }}>Cancelar alterações</Button>}\r\n                    </ButtonGroup>\r\n                </Card>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\views\\Users.jsx",["138","139","140","141","142","143"],"import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Button from '@material-ui/core/Button';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport Asidebar from '../components/Asidebar';\r\nimport ListItem from '../components/ListItem';\r\nimport Header from '../components/Header';\r\nimport CustomAlert from '../components/CustomAlert';\r\n\r\nimport userStyles from '../assets/styles/views/userStyles';\r\nimport api from '../services/api';\r\n\r\nconst useStyles = makeStyles(userStyles);\r\n\r\nexport default function User() {\r\n    const classes = useStyles();\r\n\r\n    const [_id, setId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [level, setLevel] = useState(1);\r\n    const [password, setPassword] = useState('');\r\n    const [allUsers, setAllUsers] = useState([]);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const [alertType, setAlertType] = useState('');\r\n\r\n    useEffect(() => {\r\n        loadAllUsers();\r\n    }, []);\r\n\r\n    function loadAllUsers() {\r\n        api.get('/users').then(resp => {\r\n            const users = resp.data;\r\n            setAllUsers(users);\r\n            console.log(users)\r\n        })\r\n    }\r\n\r\n    function handleDelete({ _id }) {\r\n        api.delete('/users', { data: { _id } }).then(resp => {\r\n            if (resp.data.success) {\r\n                loadAllUsers();\r\n                setAlert('Usuário excluído com sucesso');\r\n            }\r\n        })\r\n    }\r\n\r\n    function handleSetUpdate({ _id, name, password, level }) {\r\n        setId(_id);\r\n        setName(name);\r\n        setPassword(password);\r\n        setLevel(level);\r\n    }\r\n\r\n    function handleSetLevel(event) {\r\n        setLevel(event.target.value);\r\n    }\r\n\r\n    function setAlert(message, type = \"success\") {\r\n        setAlertMessage(message);\r\n        setAlertType(type);\r\n        if (type === 'success') setTimeout(() => { setAlertMessage('') }, 3000);\r\n    }\r\n\r\n    function updateOrCreate() {\r\n        if (_id !== '') {\r\n            api.put('/users', { _id, name, password, level }).then(resp => {\r\n                setAlert('Usuário atualizado com sucesso!');\r\n                loadAllUsers();\r\n                setName('');\r\n                setId('');\r\n                setPassword('');\r\n                setLevel(1);\r\n            });\r\n        } else {\r\n            if (!name) return setAlert('Nome de Usuário não definido!', 'error');\r\n            if (!password) return setAlert('Senha do Usuário não definida!', 'error');\r\n            api.post('/users', { name, level, password }).then(resp => {\r\n                if (resp.data._id) {\r\n                    setAlert('Usuário criado com sucesso!');\r\n                    loadAllUsers();\r\n                    setName('');\r\n                    setId('');\r\n                    setPassword('');\r\n                    setLevel(1);\r\n                } else {\r\n                    setAlert('ocorreu um erro');\r\n                }\r\n            }).catch(err => { setAlert('erro no server') })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.typesContainer}>\r\n            <CustomAlert close onButtonClick={() => setAlertMessage('')} alertType={alertType} alertMessage={alertMessage} />\r\n            <Asidebar />\r\n            <div className={classes.typesContent}>\r\n\r\n                <Card className={classes.cardContainer}>\r\n                    <Header title=\"Usuários\" />\r\n                    {allUsers.map(props => <ListItem\r\n                        secondary={props.level == 2 ? <span style={{ color: \"red\" }}>{props.name}</span> : <span style={{ color: \"green\" }}>{props.name}</span>}\r\n                        key={props._id}\r\n                        _id={props._id}\r\n                        /* name={props.name} */\r\n                        password={props.password}\r\n                        level={props.level}\r\n                        edit={handleSetUpdate}\r\n                        delete={handleDelete}\r\n                        hideDelete={props.name === \"Admin\"}\r\n                    />)}\r\n                </Card>\r\n\r\n                <Card className={classes.cardContainer}>\r\n                    <Header title={_id !== '' ? 'Editar Usuário' : 'Criar Novo Usuário'} />\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                required\r\n                                id=\"typeName\"\r\n                                name=\"typeName\"\r\n                                label={_id !== '' ? \"Alterar Nome do Usuário\" : \"Nome do Usuário\"}\r\n                                fullWidth\r\n                                autoComplete=\"typeName\"\r\n                                value={name}\r\n                                onChange={event => setName(event.target.value)}\r\n                            />\r\n                            <TextField\r\n                                required\r\n                                id=\"typeName\"\r\n                                name=\"typeName\"\r\n                                label={_id !== '' ? \"Alterar Senha do Usuário\" : \"Senha do Usuário\"}\r\n                                fullWidth\r\n                                autoComplete=\"typeName\"\r\n                                value={password}\r\n                                type='password'\r\n                                onChange={event => setPassword(event.target.value)}\r\n                            />\r\n                            <RadioGroup className={classes.radioContainer} aria-label=\"gender\" name=\"level\" value={level} onChange={handleSetLevel}>\r\n                                <FormControlLabel value={1} control={<Radio checked={level == 1} />} label=\"Usuário\" />\r\n                                <FormControlLabel value={2} control={<Radio checked={level == 2} />} label=\"Administrador\" />\r\n                            </RadioGroup>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                    <ButtonGroup className={classes.buttonGroup} disableElevation variant=\"contained\" color=\"primary\">\r\n                        <Button onClick={updateOrCreate}>{_id !== '' ? 'Salvar Alterações' : 'Criar Novo'}</Button>\r\n                        {_id !== '' && <Button onClick={() => {\r\n                            setId('');\r\n                            setName('');\r\n                            setPassword('');\r\n                            setLevel(1);\r\n                        }}>Cancelar alterações</Button>}\r\n                    </ButtonGroup>\r\n                </Card>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\components\\Upload.jsx",[],["144","145"],"C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\components\\ListUploadImages.jsx",[],"C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\components\\FileList\\styles.js",[],"C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\components\\Uploadv2\\styles.js",[],"C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\components\\FileList\\index.js",[],"C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\components\\Uploadv2\\index.js",[],["146","147"],"C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\Router.js",["148"],"C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\views\\NewMachine\\styled.js",[],"C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\views\\NewMachine\\index.jsx",["149","150"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Button from '@material-ui/core/Button';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { uniqueId } from 'lodash';\r\nimport filesize from 'filesize';\r\n\r\n\r\nimport Asidebar from '../../components/Asidebar';\r\nimport ListItem from '../../components/ListItem';\r\nimport Upload from '../../components/Uploadv2';\r\nimport ListUploadImages from '../../components/FileList';\r\nimport CustomAlert from '../../components/CustomAlert';\r\nimport Header from '../../components/Header';\r\n\r\nimport api from '../../services/api';\r\nimport { getUser } from '../../services/user';\r\n\r\nimport { TypesContainer, TypesContent, SelectContainer } from './styled';\r\n\r\nexport default class NewMachine extends React.Component {\r\n    state = {\r\n        //Send To Backend\r\n        _id: '',\r\n        serialNumber: '',\r\n        description: '',\r\n        clientId: '',\r\n        typeId: '',\r\n        //images\r\n        imagesToUpload: [],\r\n\r\n        //Load on Did Mount\r\n        allClients: [],\r\n        allTypes: [],\r\n\r\n        //Message Interface\r\n        alertMessage: '',\r\n        alertType: ''\r\n    }\r\n\r\n    cleanState = () => {\r\n        this.setState({\r\n            _id: '',\r\n            serialNumber: '',\r\n            description: '',\r\n            clientId: '',\r\n            typeId: '',\r\n            imagesToUpload: [],\r\n            allClients: [],\r\n            allTypes: [],\r\n            alertMessage: '',\r\n            alertType: ''\r\n        })\r\n    }\r\n\r\n    updateState = (newData) => {\r\n        this.setState({ ...this.state, ...newData })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        //load all types\r\n        api.get('/types').then(resp => {\r\n            const allTypes = resp.data;\r\n            this.updateState({ allTypes });\r\n\r\n        })\r\n\r\n        //load all clients\r\n        api.get('/clients').then(resp => {\r\n            const allClients = resp.data;\r\n            this.updateState({ allClients });\r\n        })\r\n    }\r\n\r\n    setAlert = (alertMessage, alertType = 'success') => {\r\n        this.updateState({ alertMessage, alertType });\r\n        if (alertType === 'success') setTimeout(() => { this.updateState({ alertMessage: '' }) }, 3000);\r\n    }\r\n\r\n    handleUpload = (files) => {\r\n        const uploadedFiles = files.map(file => {\r\n            return {\r\n                file,\r\n                id: uniqueId(),\r\n                name: file.name,\r\n                readableSize: filesize(file.size),\r\n                preview: URL.createObjectURL(file),\r\n                progress: 0,\r\n                uploaded: false,\r\n                error: false,\r\n                url: null,\r\n                deletehash: null\r\n            }\r\n        })\r\n\r\n        this.updateState({ imagesToUpload: uploadedFiles });\r\n        uploadedFiles.forEach(this.processUpload)\r\n    }\r\n\r\n    processUpload = (uploadedFile) => {\r\n\r\n        const data = new FormData();\r\n        data.append('image', uploadedFile.file);\r\n\r\n        api.post('/upload', data, {\r\n            onUploadProgress: e => {\r\n                const progress = parseInt(Math.round(e.loaded * 100 / e.total));\r\n                this.updateFile(uploadedFile.id, {\r\n                    progress,\r\n                })\r\n            }\r\n        }).then(response => {\r\n            this.updateFile(uploadedFile.id, {\r\n                uploaded: true,\r\n                url: response.data.link,\r\n                deletehash: response.data.deletehash\r\n            })\r\n        }).catch(e => {\r\n            this.updateFile(uploadedFile.id, {\r\n                error: true\r\n            })\r\n        })\r\n    }\r\n\r\n    updateFile = (id, data) => {\r\n        const newImages = this.state.imagesToUpload.map(imageUploaded => {\r\n            return id === imageUploaded.id ? { ...imageUploaded, ...data } : imageUploaded\r\n        })\r\n        this.updateState({ imagesToUpload: newImages })\r\n    }\r\n\r\n    handleDeleteImage = (deletehash) => {\r\n        this.setAlert('Removendo Imagem!', 'info');\r\n        api.delete(`/image/${deletehash}`).then(resp => {\r\n            //removendo da lista\r\n            if (resp.data.success) {\r\n                this.setAlert('Imagem removida com Sucesso!')\r\n                const newImages = this.state.imagesToUpload.filter(image => image.deletehash !== deletehash);\r\n                this.updateState({ imagesToUpload: newImages });\r\n            } else {\r\n                this.setAlert(`Erro ao remover a imagem\\n${resp.data.error}`, 'error');\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSave = () => {\r\n        this.setAlert('AGUARDE - Salvando Máquina!', 'info');\r\n        const { serialNumber, description, imagesToUpload, typeId, clientId } = this.state;\r\n\r\n        const { _id: userId } = getUser();\r\n\r\n        const data = {\r\n            serialNumber,\r\n            userId,\r\n            description,\r\n            imagesURL: imagesToUpload,\r\n            typeId,\r\n            clientId\r\n        }\r\n        //validação\r\n\r\n        if (!data.serialNumber) return this.setAlert('Número de série não definido!', 'error');\r\n        if (!data.typeId) return this.setAlert('Categoria de máquina não definido!', 'error');\r\n        if (!data.clientId) return this.setAlert('Cliente não definido!', 'error');\r\n        if (imagesToUpload.filter(image => !image.uploaded).length > 0) return this.setAlert('Aguarde até que as imagens tenham sido processadas!', 'info')\r\n        \r\n        api.post('/machines', data).then(resp => {\r\n            if (resp.data._id) {\r\n                this.setAlert('Máquina salva com sucesso');\r\n                setTimeout(() => this.cleanState(), 3);\r\n            } else this.setAlert('Aconteceu um erro inesperado', 'error')\r\n        }).catch(err => this.setAlert(err, 'error'))\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <TypesContainer>\r\n                <Asidebar />\r\n            <CustomAlert close onButtonClick={() => this.setAlert('', this.state.alertType)} alertType={this.state.alertType} alertMessage={this.state.alertMessage} />           \r\n                \r\n                <TypesContent>\r\n                    <Card style={{ padding: 10, marginBottom: 5 }}>\r\n                            <Header title={this.state._id !== '' ? 'Editar Máquina' : 'Criar Nova Máquina'}\r\n                                subtitle='Complete as Informações' />\r\n                        <Grid container spacing={3}>\r\n\r\n                            <Grid item xs={12} sm={5}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"serialNumber\"\r\n                                    name=\"serialNumber\"\r\n                                    label={this.state._id !== '' ? \"Alterar Número de Série\" : \"Nome Número de Série\"}\r\n                                    fullWidth\r\n                                    autoComplete=\"serialNumber\"\r\n                                    value={this.state.serialNumber}\r\n                                    onChange={event => this.updateState({ serialNumber: event.target.value })}\r\n                                />\r\n                                <SelectContainer>\r\n                                    <Select\r\n                                        style={{ marginTop: 10 }}\r\n                                        labelId=\"demo-simple-select-label\"\r\n                                        id=\"demo-simple-select\"\r\n                                        value={this.state.typeId}\r\n                                        onChange={event => this.updateState({ typeId: event.target.value })}\r\n                                        displayEmpty\r\n                                    >\r\n                                        <MenuItem value=\"\" disabled>Categoria de Máquina</MenuItem>\r\n                                        {this.state.allTypes.map(type => <MenuItem key={type._id} value={type._id}>{type.name}</MenuItem>)}\r\n                                    </Select>\r\n                                    <Select\r\n                                        style={{ marginTop: 10 }}\r\n                                        labelId=\"demo-simple-select-label\"\r\n                                        id=\"demo-simple-select\"\r\n                                        value={this.state.clientId}\r\n                                        onChange={event => this.updateState({ clientId: event.target.value })}\r\n                                        displayEmpty\r\n                                    >\r\n                                        <MenuItem value=\"\" disabled>Cliente</MenuItem>\r\n                                        {this.state.allClients.map(type => <MenuItem key={type._id} value={type._id}>{type.name}</MenuItem>)}\r\n                                    </Select>\r\n                                </SelectContainer>\r\n                                <Typography variant=\"h6\" style={{ fontSize: 16, marginTop: 20 }} gutterBottom >\r\n                                    Informações Adicionais\r\n                            </Typography>\r\n                                <TextareaAutosize\r\n                                    style={{ height: 200, width: '100%' }}\r\n                                    aria-label=\"minimum height\"\r\n                                    rowsMin={10}\r\n                                    \r\n                                    onChange={event => this.updateState({ description: event.target.value })}\r\n                                    value={this.state.description} />\r\n\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={2}></Grid>\r\n                            <Grid item xs={12} sm={5}>\r\n                                <Typography variant=\"h6\" style={{ fontSize: 16, marginTop: 20 }} gutterBottom >\r\n                                    Imagens\r\n                            </Typography>\r\n                                <Upload onUpload={files => this.handleUpload(files)} />\r\n\r\n                                {this.state.imagesToUpload.length > 0 && <ListUploadImages files={this.state.imagesToUpload} onDelete={this.handleDeleteImage} />}\r\n                            </Grid>\r\n                        </Grid>\r\n                        <ButtonGroup style={{ marginTop: 10 }} disableElevation variant=\"contained\" color=\"primary\">\r\n                            <Button onClick={this.handleSave}>{this.state._id !== '' ? 'Salvar Alterações' : 'Criar Novo'}</Button>\r\n                            {this.state._id !== '' && <Button onClick={() => {\r\n\r\n                            }}>Cancelar alterações</Button>}\r\n                        </ButtonGroup>\r\n                    </Card>\r\n\r\n                </TypesContent>\r\n            </TypesContainer>\r\n        );\r\n    }\r\n}","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\views\\App.jsx",[],"C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\components\\CustomAlert.jsx",["151","152"],"import React, { useState, useEffect } from 'react';\r\nimport Alert from '@material-ui/lab/alert';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nimport customAlertStyles from '../assets/styles/components/customAlertStyles';\r\n\r\nconst useStyles = makeStyles(customAlertStyles);\r\n\r\nexport default function CustomAlert(props) {\r\n    const classes = useStyles();\r\n    const { alertType, alertMessage } = props;\r\n    return <Alert\r\n        style={{ opacity: alertMessage ? 1 : 0 }}\r\n        className={classes.root}\r\n        severity={alertType}\r\n        action={\r\n            props.close && <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={props.onButtonClick}\r\n            >\r\n                <CloseIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n        }>\r\n        <span className={classes.text}>{alertMessage}</span>\r\n\r\n\r\n\r\n    </Alert>\r\n\r\n}","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\views\\FindMachine.jsx",["153","154","155","156","157","158","159"],"import React, { useState, useEffect } from 'react';\r\nimport Alert from '@material-ui/lab/alert';\r\nimport Card from '@material-ui/core/Card';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport Asidebar from '../components/Asidebar';\r\nimport ListItem from '../components/ListItem';\r\n\r\nimport CustomAlert from '../components/CustomAlert';\r\nimport Header from '../components/Header';\r\n\r\nimport api from '../services/api';\r\nimport findMachineStyles from '../assets/styles/views/findMachineStyles';\r\n\r\nimport { userIsAdmin } from '../services/user';\r\n\r\nconst useStyles = makeStyles(findMachineStyles);\r\n\r\nexport default function FindMachine() {\r\n    const classes = useStyles();\r\n    const query = useQuery();\r\n    const history = useHistory();\r\n\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n    const [alertType, setAlertType] = useState('');\r\n    const [machinesResult, setMachinesResult] = useState([]);\r\n    const [selectedMachine, selectMachine] = useState({});\r\n    const [hideMachinesList, setHideMachinesList] = useState(false);\r\n\r\n    useEffect(() => {\r\n        api.get(`/find?${query.toString()}`).then(resp => {\r\n            setMachinesResult(resp.data);\r\n        })\r\n    });\r\n\r\n    function useQuery() {\r\n        return new URLSearchParams(useLocation().search);\r\n    }\r\n\r\n    function handleSelectMachine(mac) {\r\n        selectMachine(mac);\r\n        setHideMachinesList(true);\r\n    }\r\n\r\n    function setAlert(message, type = \"success\") {\r\n        setAlertMessage(message);\r\n        setAlertType(type);\r\n        if (type === 'success') {\r\n            setTimeout(() => { setAlertMessage('') }, 3000);\r\n        }\r\n    }\r\n\r\n    function handleDelete(props) {\r\n        console.log(props)\r\n        api.delete('/machines', { data: { _id: props._id } }).then(resp => {\r\n            setAlert('Maquina excluida com sucesso!');\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.typesContainer}>\r\n            <Asidebar />\r\n            <CustomAlert close onButtonClick={() => setAlertMessage('')} alertMessage={alertMessage} alertType={alertType} />\r\n            <div className={classes.typesContent}>\r\n                <Card className={classes.cardContainer}>\r\n                    <Header title={hideMachinesList ? \"Informações do Equipamento\" : \"Máquinas encontradas\"} />\r\n                    {machinesResult.length === 0 && <Alert severity='error'> Nenhuma máquina encontrada </Alert>}\r\n                    {machinesResult && !hideMachinesList && machinesResult.map(machine => <ListItem\r\n                        name={machine.serialNumber}\r\n                        hideDelete={!userIsAdmin()}\r\n                        secondary={machine.typeId.name}\r\n                        {...machine}\r\n                        edit={handleSelectMachine}\r\n                        delete={handleDelete}\r\n                    />)}\r\n\r\n                    {hideMachinesList && <div className={classes.infoMachineContainer}>\r\n                        <div className={classes.infoMachineItem}><strong>Número de Série: </strong>{selectedMachine.serialNumber}</div>\r\n                        <div className={classes.infoMachineItem}><strong>Cliente:</strong> {selectedMachine.clientId.name}</div>\r\n                        <div className={classes.infoMachineItem}><strong>Categoria:</strong> {selectedMachine.typeId.name}</div>\r\n                        <div className={classes.infoMachineItem}><strong>Criado em:</strong> {`${new Date(selectedMachine.createdAt).getDate()}-${new Date(selectedMachine.createdAt).getMonth() + 1}-${new Date(selectedMachine.createdAt).getFullYear()}`}</div>\r\n                        <div className={classes.infoMachineItem}><strong>Descrição:</strong> {selectedMachine.description}</div>\r\n                        {selectedMachine.imagesURL.length > 0 && <div className={classes.infoMachineItem}><strong>Imagens:</strong>\r\n                            <div className={classes.imagesContainer}>\r\n                                {selectedMachine.imagesURL.map(a => <a key={a.url} href={a.url} target=\"_blank\">\r\n                                    <img src={a.url} key={a.url} />\r\n                                </a>)}\r\n                            </div>\r\n                        </div>}\r\n                        <ButtonGroup className={classes.buttonGroup} disableElevation variant=\"contained\" color=\"primary\">\r\n                            <Button onClick={() => { setHideMachinesList(false) }}>Voltar</Button>\r\n                        </ButtonGroup>\r\n                    </div>}\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\components\\Header.jsx",["160","161"],"import React, { useState, useEffect } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Header(props) {\r\n    return (<div class=\"container\" style={{margimBottom: 10}}>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n            {props.title}\r\n        </Typography>\r\n        {props.subtitle && <Typography variant=\"h8\" component=\"h6\">\r\n            {props.subtitle}\r\n        </Typography>}\r\n        <hr />\r\n    </div>)\r\n}","C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\assets\\styles\\views\\userStyles.js",[],"C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\assets\\styles\\views\\loginStyles.js",[],"C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\assets\\styles\\views\\appStyles.js",[],"C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\assets\\styles\\views\\findMachineStyles.js",[],"C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\assets\\styles\\components\\customAlertStyles.js",[],"C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\assets\\styles\\views\\clientsStyles.js",[],"C:\\Users\\DELL\\Documents\\htmls\\szortyka\\web\\src\\assets\\styles\\components\\sidebarStyles.js",[],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":15,"column":14,"nodeType":"168","messageId":"169","endLine":15,"endColumn":16},{"ruleId":"162","replacedBy":"170"},{"ruleId":"164","replacedBy":"171"},{"ruleId":"162","replacedBy":"172"},{"ruleId":"164","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":18},{"ruleId":"174","severity":1,"message":"175","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":18},{"ruleId":"174","severity":1,"message":"178","line":8,"column":8,"nodeType":"176","messageId":"177","endLine":8,"endColumn":13},{"ruleId":"174","severity":1,"message":"179","line":12,"column":8,"nodeType":"176","messageId":"177","endLine":12,"endColumn":17},{"ruleId":"166","severity":1,"message":"167","line":111,"column":48,"nodeType":"168","messageId":"169","endLine":111,"endColumn":50},{"ruleId":"166","severity":1,"message":"167","line":149,"column":92,"nodeType":"168","messageId":"169","endLine":149,"endColumn":94},{"ruleId":"166","severity":1,"message":"167","line":150,"column":92,"nodeType":"168","messageId":"169","endLine":150,"endColumn":94},{"ruleId":"162","replacedBy":"180"},{"ruleId":"164","replacedBy":"181"},{"ruleId":"162","replacedBy":"182"},{"ruleId":"164","replacedBy":"183"},{"ruleId":"174","severity":1,"message":"184","line":2,"column":43,"nodeType":"176","messageId":"177","endLine":2,"endColumn":56},{"ruleId":"174","severity":1,"message":"185","line":11,"column":8,"nodeType":"176","messageId":"177","endLine":11,"endColumn":13},{"ruleId":"174","severity":1,"message":"186","line":17,"column":8,"nodeType":"176","messageId":"177","endLine":17,"endColumn":16},{"ruleId":"174","severity":1,"message":"187","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":25},{"ruleId":"174","severity":1,"message":"188","line":1,"column":27,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},{"ruleId":"174","severity":1,"message":"189","line":7,"column":8,"nodeType":"176","messageId":"177","endLine":7,"endColumn":24},{"ruleId":"174","severity":1,"message":"190","line":8,"column":8,"nodeType":"176","messageId":"177","endLine":8,"endColumn":14},{"ruleId":"174","severity":1,"message":"191","line":9,"column":8,"nodeType":"176","messageId":"177","endLine":9,"endColumn":16},{"ruleId":"174","severity":1,"message":"192","line":10,"column":35,"nodeType":"176","messageId":"177","endLine":10,"endColumn":44},{"ruleId":"174","severity":1,"message":"193","line":27,"column":11,"nodeType":"176","messageId":"177","endLine":27,"endColumn":18},{"ruleId":"194","severity":1,"message":"195","line":90,"column":97,"nodeType":"196","endLine":90,"endColumn":112},{"ruleId":"197","severity":1,"message":"198","line":91,"column":37,"nodeType":"199","endLine":91,"endColumn":68},{"ruleId":"174","severity":1,"message":"187","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":25},{"ruleId":"174","severity":1,"message":"188","line":1,"column":27,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["200"],["201"],["200"],["201"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'Alert' is defined but never used.","'FormLabel' is defined but never used.",["200"],["201"],["200"],["201"],"'BrowserRouter' is defined but never used.","'Paper' is defined but never used.","'ListItem' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'FormControlLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'useParams' is defined but never used.","'history' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]